const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('ticket-guide')
        .setDescription('Get step-by-step guidance for ticket operations')
        .addStringOption(option =>
            option.setName('topic')
                .setDescription('Select a guide topic')
                .setRequired(true)
                .addChoices(
                    { name: 'Creating a Ticket', value: 'create' },
                    { name: 'Using Ticket Commands', value: 'commands' },
                    { name: 'Best Practices', value: 'best-practices' },
                    { name: 'Staff Guidelines', value: 'staff' }
                )),

    async execute(interaction) {
        const topic = interaction.options.getString('topic');
        const { client } = interaction;

        const guides = {
            create: {
                title: 'üìù How to Create a Ticket',
                description: 'Follow these steps to create a support ticket:',
                steps: [
                    '1Ô∏è‚É£ Go to the ticket creation channel',
                    '2Ô∏è‚É£ Choose the appropriate category button',
                    '3Ô∏è‚É£ Fill out any required information',
                    '4Ô∏è‚É£ Wait for staff response',
                    '5Ô∏è‚É£ Keep your ticket updated with relevant information'
                ],
                tips: [
                    'Be clear and concise about your issue',
                    'Include any relevant screenshots or information',
                    'Be patient while waiting for a response',
                    `Check \`/queue-status\` for current wait times`
                ]
            },
            commands: {
                title: '‚å®Ô∏è Essential Ticket Commands',
                description: 'Here are the main commands you can use in tickets:',
                steps: [
                    '`/add @user` - Add someone to your ticket',
                    '`/remove @user` - Remove someone from your ticket',
                    '`/transcript` - Get a copy of the ticket conversation',
                    '`/close` - Close your ticket when resolved'
                ],
                tips: [
                    'Use commands only when necessary',
                    'Staff has additional commands available',
                    'Check `/faq commands` for more details',
                    'Ask staff if you\'re unsure about a command'
                ]
            },
            'best-practices': {
                title: '‚ú® Ticket Best Practices',
                description: 'Follow these guidelines for the best support experience:',
                steps: [
                    'üìå Keep information organized and clear',
                    'üîç Provide detailed descriptions',
                    '‚è±Ô∏è Respond promptly to staff questions',
                    'üìã Use proper formatting for logs/code',
                    'üéØ Stay on topic in your ticket'
                ],
                tips: [
                    'Don\'t open multiple tickets for the same issue',
                    'Update your ticket if the situation changes',
                    'Be respectful and patient with staff',
                    'Save important information shared in your ticket'
                ]
            },
            staff: {
                title: 'üëÆ Staff Guidelines',
                description: 'Essential guidelines for handling tickets:',
                steps: [
                    '1Ô∏è‚É£ Claim tickets promptly when available',
                    '2Ô∏è‚É£ Use appropriate tags for organization',
                    '3Ô∏è‚É£ Keep ticket updates professional',
                    '4Ô∏è‚É£ Transfer tickets when necessary',
                    '5Ô∏è‚É£ Document important decisions'
                ],
                tips: [
                    'Maintain consistent response times',
                    'Use ticket notes for internal comments',
                    'Follow the escalation protocol',
                    'Keep track of your ticket statistics'
                ]
            }
        };

        const guide = guides[topic];
        const embed = new EmbedBuilder()
            .setColor(client.config.embeds.color)
            .setTitle(guide.title)
            .setDescription(guide.description)
            .addFields(
                {
                    name: topic === 'commands' ? 'Available Commands' : 'Steps',
                    value: guide.steps.join('\n'),
                    inline: false
                },
                {
                    name: 'üí° Tips',
                    value: guide.tips.join('\n'),
                    inline: false
                }
            );

        // Add specific notes based on topic
        if (topic === 'staff' && !interaction.member.roles.cache.some(role => 
            client.config.staffRoles.includes(role.id) ||
            role.id === client.config.adminRole
        )) {
            embed.setDescription('‚ö†Ô∏è This guide is only available to staff members.');
            return interaction.reply({ content: 'You do not have permission to view staff guidelines.', ephemeral: true });
        }

        embed.setFooter({ text: 'Use /faq for more detailed information' })
            .setTimestamp();

        await interaction.reply({ embeds: [embed], ephemeral: topic === 'staff' });
    },
};