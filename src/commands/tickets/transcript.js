const { SlashCommandBuilder } = require('discord.js');
const { createTranscript } = require('discord-html-transcripts');
const { addHours } = require('date-fns');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('transcript')
        .setDescription('Generate a transcript of the current ticket'),

    async execute(interaction) {
        const { channel, client } = interaction;
        const ticket = client.tickets.get(channel.id);

        if (!ticket) {
            return interaction.reply({
                content: 'This command can only be used in ticket channels!',
                ephemeral: true
            });
        }

        const hasPermission = interaction.member.roles.cache
            .some(role => 
                client.config.staffRoles.includes(role.id) ||
                role.id === client.config.adminRole
            ) || interaction.user.id === ticket.userId;

        if (!hasPermission) {
            return interaction.reply({
                content: 'You do not have permission to generate transcripts!',
                ephemeral: true
            });
        }

        await interaction.deferReply();

        try {
            const transcript = await createTranscript(channel, {
                limit: -1,
                fileName: `ticket-${ticket.id}.html`,
                poweredBy: false,
                headerText: `Ticket #${ticket.id} Transcript`,
            });

            const transcriptChannel = await interaction.guild.channels.fetch(client.config.ticketSettings.transcriptChannelId);
            const message = await transcriptChannel.send({
                content: `Transcript for ticket #${ticket.id}`,
                files: [transcript],
            });

            // Schedule transcript deletion
            setTimeout(() => {
                if (message.deletable) {
                    message.delete().catch(console.error);
                }
            }, client.config.ticketSettings.transcriptExpiryHours * 3600000);

            // Log transcript generation
            const logChannel = await interaction.guild.channels.fetch(client.config.ticketSettings.logChannelId);
            if (logChannel) {
                await logChannel.send({
                    embeds: [{
                        color: 0x0099ff,
                        title: 'Transcript Generated',
                        description: `Transcript for ticket #${ticket.id} generated by ${interaction.user}`,
                        fields: [
                            { name: 'Access Link', value: `[Click here](${message.url})`, inline: true },
                            { name: 'Expires', value: `<t:${Math.floor(addHours(new Date(), client.config.ticketSettings.transcriptExpiryHours).getTime() / 1000)}:R>`, inline: true }
                        ],
                        timestamp: new Date()
                    }]
                });
            }

            return interaction.editReply({
                content: `Transcript generated! You can access it here: ${message.url}\nThis transcript will be automatically deleted in ${client.config.ticketSettings.transcriptExpiryHours} hours.`,
            });
        } catch (error) {
            console.error(error);
            return interaction.editReply({
                content: 'There was an error generating the transcript.',
                ephemeral: true
            });
        }
    },
};